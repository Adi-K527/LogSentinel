name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  ACCESS_KEY:          ${{ secrets.AWS_ACCESS_KEY_ID }}
  SECRET_ACCESS_KEY:   ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DB_URI:              ${{ secrets.DB_URI }}
  OPENAI_API_KEY:      ${{ secrets.OPENAI_API_KEY }}
  SNS_ARN:             ${{ secrets.SNS_ARN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ env.ACCESS_KEY }}
          aws-secret-access-key: ${{ env.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build, tag, and push images to Amazon ECR
        id: build-image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            IMAGE_TAG: ${{ github.sha }}
        run: |
            docker build \
                -t $ECR_REGISTRY/logsentinel-repo:consumer1-$IMAGE_TAG \
                ./consumer \
                --build-arg KAFKA_TOPIC=user-service-logs-topic \
                --build-arg DB_URI="${{ secrets.DB_URI }}" \
                --build-arg IP_ADDRESS="3.93.192.251" \
                --build-arg OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
                --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
                --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                --build-arg SNS_ARN="${{ secrets.SNS_ARN }}"

            docker push $ECR_REGISTRY/logsentinel-repo:consumer1-$IMAGE_TAG
            echo "image=$ECR_REGISTRY/logsentinel-repo:consumer1-$IMAGE_TAG" >> $GITHUB_OUTPUT

            docker build \
                -t $ECR_REGISTRY/logsentinel-repo:consumer2-$IMAGE_TAG \
                ./consumer \
                --build-arg KAFKA_TOPIC=pic-service-logs-topic \
                --build-arg DB_URI="${{ secrets.DB_URI }}" \
                --build-arg IP_ADDRESS="3.93.192.251" \
                --build-arg OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
                --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
                --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                --build-arg SNS_ARN="${{ secrets.SNS_ARN }}"

            docker push $ECR_REGISTRY/logsentinel-repo:consumer2-$IMAGE_TAG
            echo "image=$ECR_REGISTRY/logsentinel-repo:consumer2-$IMAGE_TAG" >> $GITHUB_OUTPUT

            docker build \
                -t $ECR_REGISTRY/logsentinel-repo:consumer3-$IMAGE_TAG \
                ./consumer \
                --build-arg KAFKA_TOPIC=pic-service-logs-topic \
                --build-arg DB_URI="${{ secrets.DB_URI }}" \
                --build-arg IP_ADDRESS="3.93.192.251" \
                --build-arg OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
                --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
                --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                --build-arg SNS_ARN="${{ secrets.SNS_ARN }}"

            docker push $ECR_REGISTRY/logsentinel-repo:consumer3-$IMAGE_TAG
            echo "image=$ECR_REGISTRY/logsentinel-repo:consumer3-$IMAGE_TAG" >> $GITHUB_OUTPUT

            docker build \
                -t $ECR_REGISTRY/logsentinel-repo:consumer4-$IMAGE_TAG \
                ./consumer \
                --build-arg KAFKA_TOPIC=pic-service-logs-topic \
                --build-arg DB_URI="${{ secrets.DB_URI }}" \
                --build-arg IP_ADDRESS="3.93.192.251" \
                --build-arg OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
                --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
                --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                --build-arg SNS_ARN="${{ secrets.SNS_ARN }}"

            docker push $ECR_REGISTRY/logsentinel-repo:consumer4-$IMAGE_TAG
            echo "image=$ECR_REGISTRY/logsentinel-repo:consumer4-$IMAGE_TAG" >> $GITHUB_OUTPUT
